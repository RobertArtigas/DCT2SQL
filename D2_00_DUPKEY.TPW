#!---------------------------------------------------------------------
#!---------------------------------------------------------------------
#!---------------------------------------------------------------------
#!---------------------------------------------------------------------
#! File Name:   D2DupKey.tpw
#! Purpose:     FIREBIRD does not allow Duplicate Key Names
#! Author:      Copyright © 2005-???? by Bo Schmitz Comsoft7
#!              All rights reserved world wide.
#! Narative:
#!      This templates expects the dictionary to be defined in a specific format.
#!      The dictionary can contain multiple databases that are generated by themselves.
#!      All files, fields, keys, and relations have a specific naming convention.
#!      All files, fields, keys are already prefixed correctly.
#!      All key names must be unique.
#! 2005.12.08   Bo Schmitz
#!  *   Added Code to only print duplicates
#!  *   Added Code to enhance looks and count duplicates.
#! 2005.12.01   Bo Schmitz
#!  *   Begin creation of this template (specific requirements)
#!---------------------------------------------------------------------
#UTILITY(UTIL_DupeKeyNames, '2005.12.08: [DCT2SQL-UTIL] Find Duplicate Key Names in the Dictionary')
#!---------------------------------------------------------------------
#!---------------------------------------------------------------------
#SHEET,HSCROLL
 #TAB('General')
  #BOXED('')
   #!DISPLAY('The Firebird Script Creator [00].')
   #!DISPLAY('Copyright 2004-2005 © by Roberto Artigas Jr.')
   #!DISPLAY('All Rights Reserved World Wide.')
   #DISPLAY('')
   #DISPLAY('Fire bird requires unique key names for all the keys')
   #DISPLAY('in the dictionary')
   #DISPLAY('Clarion will allow duplicate key names because of prefix')
   #DISPLAY('')
   #DISPLAY('')
   #DISPLAY('This Utility will create a text file showing all')
   #DISPLAY('the key names in sorted order followed by an _')
   #DISPLAY('and the file name so you can find/change them.')
   #DISPLAY('')
   #PROMPT('Output: ',@S80),%OutputFile,AT(50,,130),DEFAULT(SUB(%DictionaryFile,1,LEN(%DictionaryFile)-4) & '_Keys' & '.txt')
   #DISPLAY('')
   #DISPLAY('')
  #ENDBOXED
 #ENDTAB
#ENDSHEET
#!---------------------------------------------------------------------
#DECLARE(%AllFiles),UNIQUE
#DECLARE(%KeysSorted),UNIQUE
#DECLARE(%MyKey,%KeysSorted)
#DECLARE(%MyFile,%KeysSorted)
#DECLARE(%LastKey)
#DECLARE(%LastFile)
#DECLARE(%BoCNT,LONG)
#DECLARE(%BoCNT2,LONG)
#FOR(%File)
  #CASE(%FileType)
  #OF  ('VIEW')
  #OROF('ALIAS')
    #CYCLE
  #ENDCASE
  #CASE(%FileDriver)
    #OF('ASCII')
  #OROF('BASIC')
  #OROF('DOS')
    #CYCLE
  #ENDCASE
  #ADD(%AllFiles,%File)
#ENDFOR
#FOR(%AllFiles)
  #FIX(%File,%AllFiles)
  #FOR(%Key)
    #ADD(%KeysSorted,%KeyID & '  -  ' & %File)
    #SET(%MyKey,%KeyID)
    #SET(%MyFile,%File)
  #ENDFOR #!(%Key)
#ENDFOR #!(%AllFiles)
#!---------------------------------------------------------------------
#CREATE(%OutputFile)
#MESSAGE('The Dupe_Key_Names Creator',0)
#MESSAGE('Creating: ' & %OutputFile,1)

-----------------------------------------------------
  %DictionaryFile
-----------------------------------------------------

-----------------------------------------------------
This Dictionary is used in application-- %Application.APP
-----------------------------------------------------
          Created with Dupe_Key_Names
         %@D4@(TODAY()) %@T3@(CLOCK())
      
#IF(%DictionaryFile)
Dictionary created on %@D4@DictionaryDateCreated at %@T3@DictionaryTimeCreated
Dictionary last changed on %@D4@DictionaryDateChanged at %@T3@DictionaryTimeChanged
#IF (%DictionaryChanged = 1)
Dictionary has changed since last source generation
#ELSE
Dictionary has NOT changed since last source generation
#ENDIF 
#ENDIF
#MESSAGE ('Reading the dictionary', 0)
#MESSAGE ('Searching your dictionary for file information', 1)

Key                             File
======================          ==================
#SET(%BoCNT,0)
#SET(%BoCNT2,0)
#SET(%LastKey,'')
#SET(%LastFile,'')
#FOR(%KeysSorted)
  #IF(%MyKey = %LastKey)
    #IF(%BoCNT = 0) #!NEW MATCH
#!%KeysSorted
%[30]LastKey  %[30]LastFile
%[30]MyKey  %[30]MyFile
      #SET(%LastKey,%MyKey)
      #SET(%LastFile,%MyFile)
      #SET(%BoCNT,1)
      #SET(%BoCNT2,%BoCNT2 + 2)
    #ELSE #!(%BoCNT = 0)  ANOTHER MATCH
%[30]MyKey  %[30]MyFile
      #SET(%BoCNT2,%BoCNT2 + 1)
    #ENDIF #!(%BoCNT = 0)
  #ELSE #!(%MyKey = %LastKey)  NO MATCH
    #SET(%LastKey,%MyKey)
    #SET(%LastFile,%MyFile)
    #SET(%BoCNT,0)
  #ENDIF #!(%MyKey = %LastKey)
#ENDFOR #!(%KeysSorted)

      ===================
      %BoCNT2 Duplicate Keys
      ===================

-----------------------------------------------------
  %DictionaryFile
-----------------------------------------------------

#CLOSE(%OutputFile)
#RUN('NOTEPAD.EXE "' & %OutputFile & '"')
#!--------------------------------------------------------------------
#GROUP(%UTILDupeKeyNamesEnd)
#!--------------------------------------------------------------------

#!---------------------------------------------------------------------
#!---------------------------------------------------------------------
#!---------------------------------------------------------------------
#!---------------------------------------------------------------------
#! File Name:   LongNames.tpw
#! Purpose:     BTRIEVE does not allow Field ANd Key Names > 20
#! Author:      Copyright © 2005-???? by Bo Schmitz Comsoft7
#!              All rights reserved world wide.
#! Narative:
#!      This templates expects the dictionary to be defined in a specific format.
#!      The dictionary can contain multiple databases that are generated by themselves.
#!      All files, fields, keys, and relations have a specific naming convention.
#!      All files, fields, keys are already prefixed correctly.
#!      All key names must be unique.
#! 2005.12.08   Bo Schmitz
#!  *   Added Code to enhance looks and count Long Fields/Keys.
#! 2005.12.01   Bo Schmitz
#!  *   Begin creation of this template (specific requirements)
#!---------------------------------------------------------------------
#UTILITY(UTIL_LongFldKeyNames, '2005.12.08: [DCT2SQL-UTIL] Find Long(20+) Field and Key Names in the Dictionary')
#!---------------------------------------------------------------------
#!---------------------------------------------------------------------
#SHEET,HSCROLL
 #TAB('General')
  #BOXED('')
   #!DISPLAY('The Firebird Script Creator [00].')
   #!DISPLAY('Copyright 2004-2005 © by Roberto Artigas Jr.')
   #!DISPLAY('All Rights Reserved World Wide.')
   #DISPLAY('')
   #DISPLAY('Btrieve requires all field and key names in the')
   #DISPLAY('dictionary to be 20 characters or less.')
   #DISPLAY('')
   #DISPLAY('This Utility will create a text file showing all')
   #DISPLAY('the field and key names longer than 20 characters')
   #DISPLAY('followed by an _ and the file name so you can')
   #DISPLAY('find and change them. (Configurable number)')
   #DISPLAY('')
   #PROMPT('Maximum Field and Key Length allowed',SPIN(@n3,1,99)),%BSMaxChar,DEFAULT(20)
   #DISPLAY('')
   #PROMPT('Output: ',@S80),%OutputFile,AT(50,,130),DEFAULT(SUB(%DictionaryFile,1,LEN(%DictionaryFile)-4) & '_LFK' & '.txt')
   #DISPLAY('')
   #DISPLAY('')
  #ENDBOXED
 #ENDTAB
#ENDSHEET
#!---------------------------------------------------------------------
#DECLARE(%AllFiles),UNIQUE
#DECLARE(%MyDate)
#DECLARE(%MyTime)
#DECLARE(%BoCNT,LONG)
#DECLARE(%BoCNT2,LONG)
#FOR(%File)
  #CASE(%FileType)
  #OF  ('VIEW')
  #OROF('ALIAS')
    #CYCLE
  #ENDCASE
  #CASE(%FileDriver)
    #OF('ASCII')
  #OROF('BASIC')
  #OROF('DOS')
    #CYCLE
  #ENDCASE
  #ADD(%AllFiles,%File)
#ENDFOR
#!---------------------------------------------------------------------
#CREATE(%OutputFile)
#MESSAGE('The Long_FLD_Key_Names Creator',0)
#MESSAGE('Creating: ' & %OutputFile,1)

-----------------------------------------------------
  %DictionaryFile
-----------------------------------------------------
This Dictionary is used in application-- %Application.APP
-----------------------------------------------------
#SET(%MyDate,CLIP(FORMAT(TODAY(),@D4))) #!%@D4@(TODAY())
#SET(%MyTime,FORMAT(CLOCK(),@T3)) #!%@T3@(CLOCK())
Created with Long_Fld_Key_Names %MyDate at%MyTime
#IF(%DictionaryFile)
#SET(%MyDate,CLIP(FORMAT(%DictionaryDateCreated,@D4))) #!%@D4@DictionaryDateCreated
#SET(%MyTime,FORMAT(%DictionaryTimeCreated,@T3)) #!%@T3@DictionaryTimeCreated
Dictionary created on %MyDate at%MyTime
#SET(%MyDate,CLIP(FORMAT(%DictionaryDateChanged,@D4))) #!%@D4@DictionaryDateChanged
#SET(%MyTime,FORMAT(%DictionaryTimeChanged,@T3)) #!%@T3@DictionaryTimeChanged
Dictionary last changed on %MyDate at%MyTime
#IF (%DictionaryChanged = 1)
Dictionary has changed since last source generation
#ELSE
Dictionary has NOT changed since last source generation
#ENDIF 
#ENDIF
#MESSAGE ('Reading the dictionary', 0)
#MESSAGE ('Searching your dictionary for file information', 1)

List of Fields and Keys longer than %BSMaxChar Characters

ID Name                  _ Field/Key  _ File
=============================================
#SET(%BoCNT2,%BSMaxChar + 10)
#SET(%BoCNT,0)
#FOR(%AllFiles)
  #FIX(%File,%AllFiles)
#MESSAGE ('Searching ' & %FILE & ' for long Names', 1)
  #FOR(%Key)
    #IF(LEN(%KeyID) > %BSMaxChar )
%[%BoCNT2]KeyID _ KEY   _ %File
      #SET(%BoCNT,%BoCNT + 1)
    #ENDIF
  #ENDFOR #!(%Key)
  #FOR(%FIELD)
    #IF(LEN(%FieldID) > %BSMaxChar )
%[%BoCNT2]FieldID _ FIELD _ %File
      #SET(%BoCNT,%BoCNT + 1)
    #ENDIF
  #ENDFOR #!(%FIELD)
#ENDFOR #!(%AllFiles)

    ===============================================
    %BoCNT Fields and Keys Longer than %BSMaxChar Characters
    ===============================================

-----------------------------------------------------
  %DictionaryFile
-----------------------------------------------------


#CLOSE(%OutputFile)
#RUN('NOTEPAD.EXE "' & %OutputFile & '"')
#!--------------------------------------------------------------------
#GROUP(%UTILLongFldKeyNamesEnd)
#!--------------------------------------------------------------------


#!--------------------------------------------------------------------
#!--------------------------------------------------------------------
#! Author:      Copyright © 2007-???? by Bo Schmitz Comsoft7
#!              All rights reserved world wide.
#! Narative:
#!      This templates expects the dictionary to be defined in a specific format.
#!      The dictionary can contain multiple databases that are generated by themselves.
#!      All files, fields, keys, and relations have a specific naming convention.
#!      All files, fields, keys are already prefixed correctly.
#!      All key names must be unique.
#! 2007.04.21   Bo Schmitz
#!  *   Begin creation of this template (specific requirements)
#!--------------------------------------------------------------------
#!--------------------------------------------------------------------
#UTILITY(UTIL_BadNames, '2007.04.21: [DCT2SQL-UTIL] Find Reserved Words Used in the Dictionary')
#!--------------------------------------------------------------------
#!--------------------------------------------------------------------
#! Changes:
#! 2007.04.27   Roberto Artigas
#!  * Re-arranged output line to align all the fields neatly
#!--------------------------------------------------------------------
#!--------------------------------------------------------------------
#SHEET,HSCROLL
 #TAB('General')
  #BOXED('')
   #DISPLAY('')
   #DISPLAY('Utility will check File, Field, and key names')
   #DISPLAY('in the dictionary for SQL reserved words that ')
   #DISPLAY(' may give you problems in various back ends.')
   #DISPLAY('Utility will create a text file showing the file,')
   #DISPLAY('field, or key names so you can change them')
   #DISPLAY('')
   #PROMPT('Add Clarion reserved words?',CHECK),%BoClarion,DEFAULT(%False),AT(10)
   #DISPLAY('')
   #PROMPT('Output: ',@S80),%OutputFile,AT(50,,130),DEFAULT(SUB(%DictionaryFile,1,LEN(%DictionaryFile)-4) & '_BFN' & '.txt')
   #DISPLAY('')
   #PROMPT('Ignore File Names?',CHECK),%BoFiles,DEFAULT(%False),AT(10)
   #PROMPT('Ignore Key Names?',CHECK),%BoKeys,DEFAULT(%False),AT(10)
   #DISPLAY('')
   #PROMPT('Ignore Clarion Files?',CHECK),%BoDATs,DEFAULT(%False),AT(10)
   #PROMPT('Ignore TopSpeed Files?',CHECK),%BoTPSs,DEFAULT(%False),AT(10)
   #DISPLAY('')
  #ENDBOXED
 #ENDTAB
#ENDSHEET
#!---------------------------------------------------------------------
#DECLARE(%AllFiles),UNIQUE
#DECLARE(%MyDate)
#DECLARE(%MyTime)
#DECLARE(%BoCNT,LONG)
#DECLARE(%BoCNT2,LONG)
#!
#!---------------------------------------------------------------------
#INSERT(%SqlReservedWords)
#IF(%BoClarion) 
  #INSERT(%ClarionReservedWords)
  #FOR(%ClarionWordList)
    #ADD(%SqlWordList,%ClarionWordList)
  #ENDFOR
#ENDIF #!(%BoClarion) 
#!---------------------------------------------------------------------
#CREATE(%OutputFile)
#MESSAGE('The Bad File_FLD_Key_Names Creator',0)
#MESSAGE('Creating: ' & %OutputFile,1)

-----------------------------------------------------
  %DictionaryFile
-----------------------------------------------------
This Dictionary is used in application-- %Application.APP
-----------------------------------------------------
#SET(%MyDate,CLIP(FORMAT(TODAY(),@D4))) #!%@D4@(TODAY())
#SET(%MyTime,FORMAT(CLOCK(),@T3)) #!%@T3@(CLOCK())
Created with UTIL_BadNames %MyDate at%MyTime
#IF(%DictionaryFile)
#SET(%MyDate,CLIP(FORMAT(%DictionaryDateCreated,@D4))) #!%@D4@DictionaryDateCreated
#SET(%MyTime,FORMAT(%DictionaryTimeCreated,@T3)) #!%@T3@DictionaryTimeCreated
Dictionary created on %MyDate at%MyTime
#SET(%MyDate,CLIP(FORMAT(%DictionaryDateChanged,@D4))) #!%@D4@DictionaryDateChanged
#SET(%MyTime,FORMAT(%DictionaryTimeChanged,@T3)) #!%@T3@DictionaryTimeChanged
Dictionary last changed on %MyDate at%MyTime
#IF (%DictionaryChanged = 1)
Dictionary has changed since last source generation
#ELSE
Dictionary has NOT changed since last source generation
#ENDIF 
#ENDIF
#MESSAGE ('Reading the dictionary', 0)
#MESSAGE ('Searching your dictionary for file information', 1)

List of Badly Named Files, Fields and Keys 

 TYPE   File Name                      Bad Name                       File Driver
=================================================================================
#SET(%BoCNT,0)
#SET(%BoCNT2,0)
#FOR(%File)
  #IF(%BoCNT2 <> %BoCNT)
    #SET(%BoCNT2,%BoCNT)    #! ADDED FOR SPACES
  #ENDIF
  #CASE(%FileType)
  #OF  ('VIEW')
  #OROF('ALIAS')
    #CYCLE
  #ENDCASE
  #CASE(%FileDriver)
    #OF('ASCII')
  #OROF('BASIC')
  #OROF('DOS')
    #CYCLE
  #ENDCASE
  #IF(UPPER(%FileDriver) = 'CLARION' AND %BoDATs)
    #CYCLE
  #ENDIF
  #IF(%FileDriver = 'TOPSPEED' AND %BoTPSs)
    #CYCLE
  #ENDIF
  #IF(~%BoFiles)
    #SET(%SqlWordItem, UPPER(%File))
    #FIND(%SqlWordList, %SqlWordItem)
    #IF(%SqlWordList)
_FILE_  %[30]File %[30]File %FileDriver
        #SET(%BoCNT,%BoCNT + 1)
    #ENDIF
  #ENDIF #!(~%BoFiles)
  #IF(~%BoKeys)
  #FOR(%Key)
    #SET(%SqlWordItem, UPPER(%KeyID))
    #FIND(%SqlWordList, %SqlWordItem)
    #IF(%SqlWordList)
_KEY_   %[30]File %[30]KeyID %FileDriver
      #SET(%BoCNT,%BoCNT + 1)
    #ENDIF
  #ENDFOR
  #ENDIF #!(~%BoKeys)
  #FOR(%Field)
    #SET(%SqlWordItem, UPPER(%FieldID))
    #FIND(%SqlWordList, %SqlWordItem)
    #IF(%SqlWordList)
_FIELD_ %[30]File %[30]FieldID %FileDriver
      #SET(%BoCNT,%BoCNT + 1)
       #IF(%FieldName)
    EXTERNAL NAME -- %FieldName   
       #ENDIF
    #ENDIF
  #ENDFOR
#ENDFOR

    ===============================================
    %BoCNT Files, Fields and Keys With Bad Names
    ===============================================

-----------------------------------------------------
  %DictionaryFile
-----------------------------------------------------


#CLOSE(%OutputFile)
#RUN('NOTEPAD.EXE "' & %OutputFile & '"')
#!--------------------------------------------------------------------
#GROUP(%UTILBadNamesEnd)
#!--------------------------------------------------------------------
#!--------------------------------------------------------------------


#!--------------------------------------------------------------------
#!--------------------------------------------------------------------
#UTILITY(UTIL_BadNames_External, '2010.09.13: [DCT2SQL-UTIL] Find Reserved Words Used in the Dictionary (With EXTERNAL Names)')
#!--------------------------------------------------------------------
#!--------------------------------------------------------------------
#! Changes:
#! 2010.09.13    Roberto Artigas
#!    *    Added DICTIONARY, FIELD, and KEY options to give external names
#! 2007.04.27   Roberto Artigas
#!  *     Re-arranged output line to align all the fields neatly
#!--------------------------------------------------------------------
#!--------------------------------------------------------------------
#SHEET,HSCROLL
 #TAB('General')
  #BOXED('')
   #DISPLAY('')
   #DISPLAY('Utility will check File, Field, and key names')
   #DISPLAY('in the dictionary for SQL reserved words that ')
   #DISPLAY(' may give you problems in various back ends.')
   #DISPLAY('Utility will create a text file showing the file,')
   #DISPLAY('field, or key names so you can change them')
   #DISPLAY('')
   #PROMPT('Add Clarion reserved words?',CHECK),%BoClarion,DEFAULT(%False),AT(10)
   #DISPLAY('')
   #PROMPT('Output: ',@S80),%OutputFile,AT(50,,130),DEFAULT(SUB(%DictionaryFile,1,LEN(%DictionaryFile)-4) & '_BFN' & '.txt')
   #DISPLAY('')
   #PROMPT('Ignore File Names?',CHECK),%BoFiles,DEFAULT(%False),AT(10)
   #PROMPT('Ignore Key Names?',CHECK),%BoKeys,DEFAULT(%False),AT(10)
   #DISPLAY('')
   #PROMPT('Ignore Clarion Files?',CHECK),%BoDATs,DEFAULT(%False),AT(10)
   #PROMPT('Ignore TopSpeed Files?',CHECK),%BoTPSs,DEFAULT(%False),AT(10)
   #DISPLAY('')
  #ENDBOXED
 #ENDTAB
#ENDSHEET
#!---------------------------------------------------------------------
#DECLARE(%AllFiles),UNIQUE
#DECLARE(%MyDate)
#DECLARE(%MyTime)
#DECLARE(%BoCNT,LONG)
#DECLARE(%BoCNT2,LONG)
#!
#!------------------------------------------!
#! RA.2010.09.13 - Additional declarations. !
#!------------------------------------------!
#DECLARE(%nLoc1       ,LONG)            #! Location 1
#DECLARE(%nLoc2       ,LONG)            #! Location 2
#!
#DECLARE(%NFileUser)                    #! File user options [RASQL]
#DECLARE(%NFileOpt1)                    #! File option 1 [NO]
#DECLARE(%NFileOpt2)                    #! File option 2 [SQL external table name]
#DECLARE(%NFileOpt3)                    #! File option 3 
#DECLARE(%NFileOpt4)                    #! File option 4
#!
#DECLARE(%NFieldUser)                   #! Field user options [RASQL]
#DECLARE(%NFieldOpt1)                   #! Field option 1 [NO]
#DECLARE(%NFieldOpt2)                   #! Field option 2 [<backend database type override>]
#DECLARE(%NFieldOpt3)                   #! Field option 3 [<backend database default value>]
#DECLARE(%NFieldOpt4)                   #! Field option 4
#!
#DECLARE(%NKeyUser)                     #! Key user options [RASQL]
#DECLARE(%NKeyOpt1)                     #! Key option 1 [NO]
#DECLARE(%NKeyOpt2)                     #! Key option 2 [SQL external key name]
#DECLARE(%NKeyOpt3)                     #! Key option 3
#DECLARE(%NKeyOpt4)                     #! Key option 4
#!
#!---------------------------------------------------------------------
#INSERT(%SqlReservedWords)
#!---------------------------------------------------------------------
#IF(%BoClarion) 
  #INSERT(%ClarionReservedWords)
  #FOR(%ClarionWordList)
    #ADD(%SqlWordList,%ClarionWordList)
  #ENDFOR
#ENDIF #!(%BoClarion) 
#!---------------------------------------------------------------------
#CREATE(%OutputFile)
#MESSAGE('The Bad File_FLD_Key_Names Creator',0)
#MESSAGE('Creating: ' & %OutputFile,1)

-----------------------------------------------------
  %DictionaryFile
-----------------------------------------------------
This Dictionary is used in application-- %Application.APP
-----------------------------------------------------
#SET(%MyDate,CLIP(FORMAT(TODAY(),@D4))) #!%@D4@(TODAY())
#SET(%MyTime,FORMAT(CLOCK(),@T3)) #!%@T3@(CLOCK())
Created with UTIL_BadNames %MyDate at%MyTime
#IF(%DictionaryFile)
#SET(%MyDate,CLIP(FORMAT(%DictionaryDateCreated,@D4))) #!%@D4@DictionaryDateCreated
#SET(%MyTime,FORMAT(%DictionaryTimeCreated,@T3)) #!%@T3@DictionaryTimeCreated
Dictionary created on %MyDate at%MyTime
#SET(%MyDate,CLIP(FORMAT(%DictionaryDateChanged,@D4))) #!%@D4@DictionaryDateChanged
#SET(%MyTime,FORMAT(%DictionaryTimeChanged,@T3)) #!%@T3@DictionaryTimeChanged
Dictionary last changed on %MyDate at%MyTime
#IF (%DictionaryChanged = 1)
Dictionary has changed since last source generation
#ELSE
Dictionary has NOT changed since last source generation
#ENDIF 
#ENDIF
#MESSAGE ('Reading the dictionary', 0)
#MESSAGE ('Searching your dictionary for file information', 1)
#!-------------------------------------------------------------------!
#! RA.2010.09.13 - Added files to queue to get sorted list of files. !
#!-------------------------------------------------------------------!
#FOR (%File)
  #ADD (%AllFiles, %File)
#ENDFOR
#!

List of Badly Named Files, Fields and Keys 

 TYPE   File Name                      Bad Name                       External Name                  File Driver
================================================================================================================
#SET(%BoCNT,0)
#SET(%BoCNT2,0)
#FOR(%AllFiles)
  #FIX(%File, %AllFiles)
  #!---------------------------------------------------------------!
  #! RA.2010.09.13 - Ignore file place marker definitions.         !
  #! These are files that are defined but that contain no fields.  !
  #!---------------------------------------------------------------!
  #IF(NOT ITEMS(%Field)) 
    #CYCLE   
  #ENDIF
  #!-------------------------------------------!
  #! RA.2010.09.13 - Processing table options. !
  #!-------------------------------------------!
  #SET(%nLoc1,INSTRING('RASQL(',%FileUserOptions,1,1))
  #SET(%nLoc2,INSTRING(')',%FileUserOptions,1,%nLoc1))
  #SET(%nFileUser,SUB(%FileUserOptions,%nLoc1,%nLoc2))
  #!SET(%NFileUser,EXTRACT(%FileUserOptions,'RASQL'))
  #SET(%NFileOpt1,EXTRACT(%NFileUser,'RASQL',1))
  #SET(%NFileOpt2,EXTRACT(%NFileUser,'RASQL',2))
  #SET(%NFileOpt3,EXTRACT(%NFileUser,'RASQL',3))
  #SET(%NFileOpt4,EXTRACT(%NFileUser,'RASQL',4))
  #!-------------------------------------------------------------!
  #! The first option RASQL(NO) controls if a file is processed. !
  #!-------------------------------------------------------------!
  #IF(SUB(%NFileOpt1,1,1)='N')
    #CYCLE
  #ENDIF
#!
  #IF(%BoCNT2 <> %BoCNT)
    #SET(%BoCNT2,%BoCNT)    #! ADDED FOR SPACES
  #ENDIF
  #CASE(%FileType)
  #OF  ('VIEW')
  #OROF('ALIAS')
    #CYCLE
  #ENDCASE
  #CASE(%FileDriver)
    #OF('ASCII')
  #OROF('BASIC')
  #OROF('DOS')
    #CYCLE
  #ENDCASE
#!
  #IF(UPPER(%FileDriver) = 'CLARION' AND %BoDATs)
    #CYCLE
  #ENDIF
  #IF(%FileDriver = 'TOPSPEED' AND %BoTPSs)
    #CYCLE
  #ENDIF
#!
  #IF(~%BoFiles)
    #SET(%SqlWordItem, UPPER(%File))
    #FIND(%SqlWordList, %SqlWordItem)
    #IF(%SqlWordList)
_FILE_  %[30]File %[30]File %[30]NFileOpt2 %FileDriver
        #SET(%BoCNT,%BoCNT + 1)
    #ENDIF
  #ENDIF #!(~%BoFiles)
#!
  #IF(~%BoKeys)
  #FOR(%Key)
    #!-----------------------------------------!
    #! RA.2010.09.13 - Processing key options. !
    #!-----------------------------------------!
    #SET(%nLoc1,INSTRING('RASQL(',%KeyUserOptions,1,1))
    #SET(%nLoc2,INSTRING(')',%KeyUserOptions,1,%nLoc1))
    #SET(%nKeyUser,UPPER(SUB(%KeyUserOptions,%nLoc1,%nLoc2)))
    #!SET(%NKeyUser,UPPER(EXTRACT(%KeyUserOptions,'RASQL')))
    #SET(%NKeyOpt1,EXTRACT(%NKeyUser,'RASQL',1))
    #SET(%NKeyOpt2,EXTRACT(%NKeyUser,'RASQL',2))
    #SET(%NKeyOpt3,EXTRACT(%NKeyUser,'RASQL',3))
    #SET(%NKeyOpt4,EXTRACT(%NKeyUser,'RASQL',4))
#!%NKeyUser, %NKeyOpt1, %NKeyOpt2, %NKeyOpt3, %NKeyOpt4
    #!------------------------------------------------------------!
    #! The first option RASQL(NO) controls if a key is processed. !
    #!------------------------------------------------------------!
    #IF(SUB(%NKeyOpt1,1,1)='N')
      #CYCLE
    #ENDIF
    #SET(%SqlWordItem, UPPER(%KeyID))
    #FIND(%SqlWordList, %SqlWordItem)
    #IF(%SqlWordList)
_KEY_   %[30]File %[30]KeyID %[30]KeyName %FileDriver
      #SET(%BoCNT,%BoCNT + 1)
    #ENDIF
  #ENDFOR
  #ENDIF #!(~%BoKeys)
#!
  #FOR(%Field)
    #SET(%SqlWordItem, UPPER(%FieldID))
    #FIND(%SqlWordList, %SqlWordItem)
    #IF(%SqlWordList)
_FIELD_ %[30]File %[30]FieldID %[30]FieldName %FileDriver
      #SET(%BoCNT,%BoCNT + 1)
#!       #IF(%FieldName)
#!    EXTERNAL NAME -- %FieldName   
#!       #ENDIF
    #ENDIF
  #ENDFOR
#ENDFOR

    ===============================================
    %BoCNT Files, Fields and Keys With Bad Names
    ===============================================

-----------------------------------------------------
  %DictionaryFile
-----------------------------------------------------

#CLOSE(%OutputFile)
#RUN('NOTEPAD.EXE "' & %OutputFile & '"')
#!--------------------------------------------------------------------
#GROUP(%UTILBadNamesExternalEnd)
#!--------------------------------------------------------------------
#!--------------------------------------------------------------------

#!--------------------------------------------------------------------
#!---------------------------------------------------------------------
#UTILITY(UTIL_DupeKeyNames_External, '2010.09.13: [DCT2SQL-UTIL] Find Duplicate Key Names in the Dictionary')
#!---------------------------------------------------------------------
#!---------------------------------------------------------------------
#SHEET,HSCROLL
 #TAB('General')
  #BOXED('')
   #!DISPLAY('The Firebird Script Creator [00].')
   #!DISPLAY('Copyright 2004-2005 © by Roberto Artigas Jr.')
   #!DISPLAY('All Rights Reserved World Wide.')
   #DISPLAY('')
   #DISPLAY('Fire bird requires unique key names for all the keys')
   #DISPLAY('in the dictionary')
   #DISPLAY('Clarion will allow duplicate key names because of prefix')
   #DISPLAY('')
   #DISPLAY('')
   #DISPLAY('This Utility will create a text file showing all')
   #DISPLAY('the key names in sorted order followed by an _')
   #DISPLAY('and the file name so you can find/change them.')
   #DISPLAY('')
   #PROMPT('Output: ',@S80),%OutputFile,AT(50,,130),DEFAULT(SUB(%DictionaryFile,1,LEN(%DictionaryFile)-4) & '_Keys' & '.txt')
   #DISPLAY('')
   #DISPLAY('')
  #ENDBOXED
 #ENDTAB
#ENDSHEET
#!
#!------------------------------------------!
#! RA.2010.09.13 - Additional declarations. !
#!------------------------------------------!
#DECLARE(%nLoc1       ,LONG)            #! Location 1
#DECLARE(%nLoc2       ,LONG)            #! Location 2
#!
#DECLARE(%NFileUser)                    #! File user options [RASQL]
#DECLARE(%NFileOpt1)                    #! File option 1 [NO]
#DECLARE(%NFileOpt2)                    #! File option 2 [SQL external table name]
#DECLARE(%NFileOpt3)                    #! File option 3 
#DECLARE(%NFileOpt4)                    #! File option 4
#!
#DECLARE(%NFieldUser)                   #! Field user options [RASQL]
#DECLARE(%NFieldOpt1)                   #! Field option 1 [NO]
#DECLARE(%NFieldOpt2)                   #! Field option 2 [<backend database type override>]
#DECLARE(%NFieldOpt3)                   #! Field option 3 [<backend database default value>]
#DECLARE(%NFieldOpt4)                   #! Field option 4
#!
#DECLARE(%NKeyUser)                     #! Key user options [RASQL]
#DECLARE(%NKeyOpt1)                     #! Key option 1 [NO]
#DECLARE(%NKeyOpt2)                     #! Key option 2 [SQL external key name]
#DECLARE(%NKeyOpt3)                     #! Key option 3
#DECLARE(%NKeyOpt4)                     #! Key option 4
#!
#!---------------------------------------------------------------------
#DECLARE(%AllFiles),UNIQUE
#DECLARE(%KeysSorted),UNIQUE
#DECLARE(%MyKey,%KeysSorted)
#DECLARE(%MyFile,%KeysSorted)
#DECLARE(%MyExtKey,%KeysSorted)
#DECLARE(%MyExtFile,%KeysSorted)
#DECLARE(%LastKey)
#DECLARE(%LastFile)
#DECLARE(%LastExtKey)
#DECLARE(%LastExtFile)
#DECLARE(%BoCNT,LONG)
#DECLARE(%BoCNT2,LONG)
#!
#FOR(%File)
  #CASE(%FileType)
  #OF  ('VIEW')
  #OROF('ALIAS')
    #CYCLE
  #ENDCASE
  #CASE(%FileDriver)
    #OF('ASCII')
  #OROF('BASIC')
  #OROF('DOS')
    #CYCLE
  #ENDCASE
  #ADD(%AllFiles,%File)
#ENDFOR
#FOR(%AllFiles)
  #FIX(%File,%AllFiles)
  #SET(%nLoc1,INSTRING('RASQL(',%FileUserOptions,1,1))
  #SET(%nLoc2,INSTRING(')',%FileUserOptions,1,%nLoc1))
  #SET(%nFileUser,SUB(%FileUserOptions,%nLoc1,%nLoc2))
  #SET(%NFileOpt1,EXTRACT(%NFileUser,'RASQL',1))
  #SET(%NFileOpt2,EXTRACT(%NFileUser,'RASQL',2))
  #SET(%NFileOpt3,EXTRACT(%NFileUser,'RASQL',3))
  #SET(%NFileOpt4,EXTRACT(%NFileUser,'RASQL',4))
  #!-------------------------------------------------------------!
  #! The first option RAWEB(NO) controls if a file is processed. !
  #!-------------------------------------------------------------!
  #IF(SUB(%NFileOpt1,1,1)='N')
    #CYCLE
  #ENDIF
  #FOR(%Key)
    #!-----------------------------------------!
    #! RA.2010.09.13 - Processing key options. !
    #!-----------------------------------------!
    #SET(%nLoc1,INSTRING('RASQL(',%KeyUserOptions,1,1))
    #SET(%nLoc2,INSTRING(')',%KeyUserOptions,1,%nLoc1))
    #SET(%nKeyUser,SUB(%KeyUserOptions,%nLoc1,%nLoc2))
    #!SET(%NKeyUser,EXTRACT(%KeyUserOptions,'RASQL'))
    #SET(%NKeyOpt1,EXTRACT(%NKeyUser,'RASQL',1))
    #SET(%NKeyOpt2,EXTRACT(%NKeyUser,'RASQL',2))
    #SET(%NKeyOpt3,EXTRACT(%NKeyUser,'RASQL',3))
    #SET(%NKeyOpt4,EXTRACT(%NKeyUser,'RASQL',4))
#!%NKeyUser, %NKeyOpt1, %NKeyOpt2, %NKeyOpt3, %NKeyOpt4
    #!------------------------------------------------------------!
    #! The first option RASQL(NO) controls if a key is processed. !
    #!------------------------------------------------------------!
    #IF(SUB(%NKeyOpt1,1,1)='N')
      #CYCLE
    #ENDIF
    #ADD(%KeysSorted,%KeyID & '  -  ' & %File & '  -  ' & %KeyName & '  -  ' & %NFileOpt2)
    #SET(%MyKey,%KeyID)
    #SET(%MyFile,%File)
    #SET(%MyExtKey,%KeyName)
    #SET(%MyExtFile,%NFileOpt2)
  #ENDFOR #!(%Key)
#ENDFOR #!(%AllFiles)
#!---------------------------------------------------------------------
#CREATE(%OutputFile)
#MESSAGE('The Dupe_Key_Names Creator',0)
#MESSAGE('Creating: ' & %OutputFile,1)
#IF(%False)
  #FOR(%KeysSorted)
%KeysSorted
  #ENDFOR
#ENDIF

-----------------------------------------------------
  %DictionaryFile
-----------------------------------------------------

-----------------------------------------------------
This Dictionary is used in application-- %Application.APP
-----------------------------------------------------
          Created with Dupe_Key_Names
         %@D4@(TODAY()) %@T3@(CLOCK())
      
#IF(%DictionaryFile)
Dictionary created on %@D4@DictionaryDateCreated at %@T3@DictionaryTimeCreated
Dictionary last changed on %@D4@DictionaryDateChanged at %@T3@DictionaryTimeChanged
#IF (%DictionaryChanged = 1)
Dictionary has changed since last source generation
#ELSE
Dictionary has NOT changed since last source generation
#ENDIF 
#ENDIF
#MESSAGE ('Reading the dictionary', 0)
#MESSAGE ('Searching your dictionary for file information', 1)

Key Name                        File Name                      External File Name             External Key Name
==================================================================================================================================
#SET(%BoCNT,0)
#SET(%BoCNT2,0)
#SET(%LastKey,'')
#SET(%LastFile,'')
#SET(%LastExtKey,'')
#SET(%LastExtFile,'')
#!
#FOR(%KeysSorted)
  #IF(%MyKey = %LastKey)
    #IF(%BoCNT = 0) #!NEW MATCH
#!%KeysSorted
%[30]LastKey  %[30]LastFile %[30]LastExtFile %LastExtKey
%[30]MyKey  %[30]MyFile %[30]MyExtFile %MyExtKey
      #SET(%LastKey,%MyKey)
      #SET(%LastFile,%MyFile)
      #SET(%LastExtKey,%MyExtKey)
      #SET(%LastExtFile,%MyExtFile)
      #SET(%BoCNT,1)
      #SET(%BoCNT2,%BoCNT2 + 2)
    #ELSE #!(%BoCNT = 0)  ANOTHER MATCH
%[30]MyKey  %[30]MyFile %[30]MyExtFile %MyExtKey
      #SET(%BoCNT2,%BoCNT2 + 1)
    #ENDIF #!(%BoCNT = 0)
  #ELSE #!(%MyKey = %LastKey)  NO MATCH
    #SET(%LastKey,%MyKey)
    #SET(%LastFile,%MyFile)
    #SET(%LastExtKey,%MyExtKey)
    #SET(%LastExtFile,%MyExtFile)
    #SET(%BoCNT,0)
  #ENDIF #!(%MyKey = %LastKey)
#ENDFOR #!(%KeysSorted)

      ===================
      %BoCNT2 Duplicate Keys
      ===================

-----------------------------------------------------
  %DictionaryFile
-----------------------------------------------------

#CLOSE(%OutputFile)
#RUN('NOTEPAD.EXE "' & %OutputFile & '"')
#!--------------------------------------------------------------------
#GROUP(%UTILDupeKeyNamesExternalEnd)
#!--------------------------------------------------------------------
#!--------------------------------------------------------------------

